#ifndef BLUR_H
#define BLUR_H

const float g_gaussCoefs[] = {
    0.001939912183883384,
    0.0035618554214704484,
    0.005497587571645408,
    0.007132958172557572,
    0.007779807499583759,
    0.007132958172557572,
    0.005497587571645408,
    0.0035618554214704484,
    0.001939912183883384,
    0.0035618554214704484,
    0.006539890902721956,
    0.010094071401662418,
    0.013096760744698442,
    0.01428443501237098,
    0.013096760744698442,
    0.010094071401662418,
    0.006539890902721956,
    0.0035618554214704484,
    0.005497587571645408,
    0.010094071401662418,
    0.015579813024014138,
    0.020214349146474752,
    0.022047478939941797,
    0.020214349146474752,
    0.015579813024014138,
    0.010094071401662418,
    0.005497587571645408,
    0.007132958172557572,
    0.013096760744698442,
    0.020214349146474752,
    0.02622752344882144,
    0.0286059554376285,
    0.02622752344882144,
    0.020214349146474752,
    0.013096760744698442,
    0.007132958172557572,
    0.007779807499583759,
    0.01428443501237098,
    0.022047478939941797,
    0.0286059554376285,
    0.031200074536063698,
    0.0286059554376285,
    0.022047478939941797,
    0.01428443501237098,
    0.007779807499583759,
    0.007132958172557572,
    0.013096760744698442,
    0.020214349146474752,
    0.02622752344882144,
    0.0286059554376285,
    0.02622752344882144,
    0.020214349146474752,
    0.013096760744698442,
    0.007132958172557572,
    0.005497587571645408,
    0.010094071401662418,
    0.015579813024014138,
    0.020214349146474752,
    0.022047478939941797,
    0.020214349146474752,
    0.015579813024014138,
    0.010094071401662418,
    0.005497587571645408,
    0.0035618554214704484,
    0.006539890902721956,
    0.010094071401662418,
    0.013096760744698442,
    0.01428443501237098,
    0.013096760744698442,
    0.010094071401662418,
    0.006539890902721956,
    0.0035618554214704484,
    0.001939912183883384,
    0.0035618554214704484,
    0.005497587571645408,
    0.007132958172557572,
    0.007779807499583759,
    0.007132958172557572,
    0.005497587571645408,
    0.0035618554214704484,
    0.001939912183883384
};

vec3 blur_image(sampler2D srcImage, vec2 coord) {
    vec2 texSize = vec2(textureSize(srcImage, 0));
    vec2 pixelOffset = vec2(1.0 / float(texSize.x), 1.0 / float(texSize.y));

    vec3 result = vec3(0.0);
    int coefIndex = 0;
    for (int y = -4; y <= 4; ++y) {
        for (int x = -4; x <= 4; ++x) {
            vec2 offset = vec2(x, y);

            float coef = g_gaussCoefs[coefIndex];

            vec4 texSample = texture(srcImage, coord + (offset / texSize));
            result += coef * texSample.a * texSample.rgb;
            ++coefIndex;
        }
    }

    return result;
}

float blur_image_single(sampler2D srcImage, vec2 coord) {
    vec2 texSize = vec2(textureSize(srcImage, 0));
    vec2 pixelOffset = vec2(1.0 / float(texSize.x), 1.0 / float(texSize.y));

    float result = 0.0;
    int coefIndex = 0;
    for (int y = -4; y <= 4; ++y) {
        for (int x = -4; x <= 4; ++x) {
            vec2 offset = vec2(x, y);

            float coef = g_gaussCoefs[coefIndex];

            result += coef * texture(srcImage, coord + (offset / texSize)).r;
            ++coefIndex;
        }
    }

    return result;
}

#endif // BLUR_H
