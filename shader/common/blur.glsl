#ifndef BLUR_H
#define BLUR_H

const float g_gaussCoefs[] = {
    0.0007634473286087523,
    0.0018314149348447168,
    0.003421533548404639,
    0.004978301937756899,
    0.005641155139668814,
    0.004978301937756899,
    0.003421533548404639,
    0.0018314149348447168,
    0.0007634473286087523,
    0.0018314149348447168,
    0.004393336040201353,
    0.008207832296747465,
    0.011942325524393553,
    0.013532427693987032,
    0.011942325524393553,
    0.008207832296747465,
    0.004393336040201353,
    0.0018314149348447168,
    0.003421533548404639,
    0.008207832296747465,
    0.015334249507680087,
    0.022311201383287904,
    0.025281903333535125,
    0.022311201383287904,
    0.015334249507680087,
    0.008207832296747465,
    0.003421533548404639,
    0.004978301937756899,
    0.011942325524393553,
    0.022311201383287904,
    0.03246260646250164,
    0.0367849522955009,
    0.03246260646250164,
    0.022311201383287904,
    0.011942325524393553,
    0.004978301937756899,
    0.005641155139668814,
    0.013532427693987032,
    0.025281903333535125,
    0.0367849522955009,
    0.041682811789783836,
    0.0367849522955009,
    0.025281903333535125,
    0.013532427693987032,
    0.005641155139668814,
    0.004978301937756899,
    0.011942325524393553,
    0.022311201383287904,
    0.03246260646250164,
    0.0367849522955009,
    0.03246260646250164,
    0.022311201383287904,
    0.011942325524393553,
    0.004978301937756899,
    0.003421533548404639,
    0.008207832296747465,
    0.015334249507680087,
    0.022311201383287904,
    0.025281903333535125,
    0.022311201383287904,
    0.015334249507680087,
    0.008207832296747465,
    0.003421533548404639,
    0.0018314149348447168,
    0.004393336040201353,
    0.008207832296747465,
    0.011942325524393553,
    0.013532427693987032,
    0.011942325524393553,
    0.008207832296747465,
    0.004393336040201353,
    0.0018314149348447168,
    0.0007634473286087523,
    0.0018314149348447168,
    0.003421533548404639,
    0.004978301937756899,
    0.005641155139668814,
    0.004978301937756899,
    0.003421533548404639,
    0.0018314149348447168,
    0.0007634473286087523,
};

vec3 blur_image(sampler2D srcImage, vec2 coord) {
    vec2 texSize = vec2(textureSize(srcImage, 0));
    vec2 pixelOffset = vec2(1.0 / float(texSize.x), 1.0 / float(texSize.y));

    vec3 result = vec3(0.0);
    int coefIndex = 0;
    for (int y = -4; y <= 4; ++y) {
        for (int x = -4; x <= 4; ++x) {
            vec2 offset = vec2(x, y);

            float coef = g_gaussCoefs[coefIndex];

            result += coef * texture(srcImage, coord + (offset / texSize)).rgb;
            ++coefIndex;
        }
    }

    return result;
}

float blur_image_single(sampler2D srcImage, vec2 coord) {
    vec2 texSize = vec2(textureSize(srcImage, 0));
    vec2 pixelOffset = vec2(1.0 / float(texSize.x), 1.0 / float(texSize.y));

    float result = 0.0;
    int coefIndex = 0;
    for (int y = -4; y <= 4; ++y) {
        for (int x = -4; x <= 4; ++x) {
            vec2 offset = vec2(x, y);

            float coef = g_gaussCoefs[coefIndex];

            result += coef * texture(srcImage, coord + (offset / texSize)).r;
            ++coefIndex;
        }
    }

    return result;
}

#endif // BLUR_H
